. figure out how to get lex to accept strings with \" in them

. printf (print + format)
. implement: format, slice, length
. implement let values
. have better printing of struct schema when bad vals are used to construct a struct

# x doesn't know that it is called x
let x = lam z = match z | ( -> ( | z1, zs -> z1 + 1, (zs : x) end in (4,6,8;) : x.))

. load
    - loads both racket modules and cm ones
    - allow * wildcard
    - private (not shared) variables starting in _ (ie _f, private var f)

. evalp
    - evaluates racket procedures
    - takes a proc name (string) and returns the results of the call as a string
    - prefix racket var names with 'v:'


# null argument lambda
def oneplustwo := lam null := 1 + 2
