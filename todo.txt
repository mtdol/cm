. figure out how to get lex to accept strings with \" in them
. standardized testing (always could use more)
. how exactly should type system work

. printf (print + format)
. implement: format, slice, match, fun (if static type system), fun?
. implement def, let, values, lam
. when keyword for match statement and in general
    - a when b else c
    - match arg with [a, b when c;], [c,b;];
        - two different forms like this?
. look into error handling system


later...

. self recurse keyword?
. struct dataatype
. load
    - loads both racket modules and cm ones
    - takes a string or list of strings
    - start strings with 'f:' to indicate file locations
. evalp
    - evaluates racket procedures
    - takes a proc name (string) and returns the results of the call as a string
    - prefix racket var names with 'v:'
    
. installer (linux and windows)
    - look up racket distro info
